<?xml version="1.0"?>

<!--Created by Alphonsus Adu-Bredu
	Assistive Robotics Group, Tufts University
    Email: alphonsusbq436@gmail.com
-->
<robot name="bill" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- Sphere inertia -->
	<xacro:macro name="sphere_inertial_with_origin" params="radius mass *origin">
	    <inertial>
	      <mass value="${mass}" />
	      <insert_block name="origin" />
	      <inertia ixx="${0.4 * mass * radius * radius}" ixy="0.0" ixz="0.0"
	        iyy="${0.4 * mass * radius * radius}" iyz="0.0"
	        izz="${0.4 * mass * radius * radius}" />
	    </inertial>
	  </xacro:macro>

<!-- Cuboid inertia -->
	<xacro:macro name="box_inertial" params="x y z mass">
		    <inertial>
		      <mass value="${mass}" />
		      <origin xyz="0 0 0" />
		      <inertia ixx="${0.0833333 * mass * (y*y + z*z)}" ixy="0.0" ixz="0.0"
		        iyy="${0.0833333 * mass * (x*x + z*z)}" iyz="0.0"
		        izz="${0.0833333 * mass * (x*x + y*y)}" />
		    </inertial>
    </xacro:macro>

<!-- Cylinder inertia -->
	<xacro:macro name="cylinder_inertial_with_origin" params="radius length mass *origin">
	    <inertial>
	      <mass value="${mass}" />
	      <insert_block name="origin" />
	      <inertia ixx="${0.0833333 * mass * (3 * radius * radius + length * length)}" ixy="0.0" ixz="0.0"
	        iyy="${0.0833333 * mass * (3 * radius * radius + length * length)}" iyz="0.0"
	        izz="${0.5 * mass * radius * radius}" />
	    </inertial>
  </xacro:macro>

	<gazebo>
	  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
	    <robotNamespace>/bill</robotNamespace>
	    <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
	  </plugin>
	</gazebo>

	<!-- <gazebo>
		<plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>50.0</updateRate>
			<bodyName>base_link</bodyName>
			<topicName>odom</topicName>
			<gaussianNoise>0.01</gaussianNoise>
			<frameName>map</frameName>
			<xyzOffsets>0 0 0</xyzOffsets>
			<rpyOffsets>0 0 0</rpyOffsets>
		</plugin>
	</gazebo> -->

	<material name="black">
		<color rgba="0.0 0.0 0.0 1.0"/>
	</material>
	<material name="blue">
		<color rgba="0.203125 0.23828125 0.28515625 1.0"/>
	</material>
	<material name="green">
		<color rgba="0.0 0.8 0.0 1.0"/>
	</material>
	<material name="grey">
		<color rgba="0.2 0.2 0.2 1.0"/>
	</material>
	<material name="orange">
		<color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
	</material>
	<material name="brown">
		<color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
	</material>
	<material name="red">
		<color rgba="0.80078125 0.12890625 0.1328425 1.0"/>
	</material>
	<material name="white">
		<color rgba="1.0 1.0 1.0 1.0"/>
	</material>


	<gazebo reference="chassis">
		<material>Gazebo/White</material>
	</gazebo>

	<gazebo reference="caster">
		<material>Gazebo/Black</material>
	</gazebo>
	<gazebo reference="left_wheel">
		<material>Gazebo/Black</material>
	</gazebo>
	<gazebo reference="right_wheel">
		<material>Gazebo/Black</material>
	</gazebo>
	
	<link name="base_link"/>

	

	<link name="chassis">
		<!--pose and inertial-->
		<pose>0 0 0.1 0 0 0 </pose>
		<xacro:box_inertial x="1" y="0.6" z="0.24" mass="4"/>
	<!-- 	<inertial>
			<mass value="15"/>
			<origin rpy="0 0 0" xyz="0 0 0.1"/>
			<inertia ixx="0.0" ixy="0" ixz="0" iyy="0.0" iyz="0.0" izz="0"/>
		</inertial> -->

		<!--body-->
		<collision name="collision_chassis">
			<geometry>
				<box size="1 0.6 0.24"/>
			</geometry>
		</collision>

		<visual>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<geometry>
				<box size="1 0.6 0.24"/>
			</geometry>
			<material name="blue"/>
		</visual>
	</link>

	<joint name="base_link_joint" type="fixed" >
		<parent link="base_link"/>
		<child link="chassis"/>		
		
	</joint>

		<!--caster front -->
		<link name="caster">
			<!-- <xacro:sphere_inertial_with_origin radius="0.06" mass="0.5">
				<origin xyz="0 0 0" rpy="1.57079632679 0 0"/>
			</xacro:sphere_inertial_with_origin> -->
			<inertial>
				<mass value="0.5"/>
				<origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
				<inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
			</inertial>

			<collision name="caster_front_collision">
				<origin rpy="1.57079632679 0 0" xyz="0 0 -0.1"/>
				<geometry>
					<sphere radius="0.06"/>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>0</mu>
							<mu2>0</mu2>
							<slip1>1.0</slip1>
							<slip2>1.0</slip2>
						</ode>
					</friction>
				</surface>
			</collision>

			<visual name="caster_front_visual">
				<origin rpy="1.57079632679 0 0" xyz="0 0 -0.1"/>
				<geometry>
					<sphere radius="0.06"/>
				</geometry>
				<material name="black"/>
			</visual>
		</link>

	<joint name="caster_front_joint" type="fixed">
	    <parent link="chassis"/>
	    <child link="caster"/>
	    <origin rpy="-1.57079632679 0 0" xyz="0.4 0.1 -0.1"/>
	</joint>

	  <gazebo reference="caster">
	    <turnGravityOff>false</turnGravityOff>
	  </gazebo>


	  <!--caster back -->
		<link name="casterback">
			<!-- <xacro:sphere_inertial_with_origin radius="0.06" mass="0.6">
				<origin xyz="0 0 0" rpy="1.57079632679 0 0"/>
			</xacro:sphere_inertial_with_origin> -->

			<inertial>
				<mass value="0.6"/>
				<origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
				<inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
			</inertial>

			<collision name="caster_back_collision">
				<origin rpy="1.57079632679 0 0" xyz="0 0 -0.1"/>
				<geometry>
					<sphere radius="0.06"/>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>0</mu>
							<mu2>0</mu2>
							<slip1>1.0</slip1>
							<slip2>1.0</slip2>
						</ode>
					</friction>
				</surface>
			</collision>

			<visual name="caster_back_visual">
				<origin rpy="1.57079632679 0 0" xyz="0 0 -0.1"/>
				<geometry>
					<sphere radius="0.06"/>
				</geometry>
				<material name="black"/>
			</visual>
	</link>

	<joint name="caster_back_joint" type="fixed">
	    <parent link="chassis"/>
	    <child link="casterback"/>
	    <origin rpy="-1.57079632679 0 0" xyz="-0.4 0.1 -0.1"/>
	</joint>

	  <gazebo reference="casterback">
	    <turnGravityOff>false</turnGravityOff>
	  </gazebo>
	

<!--right wheel -->
	<link name="right_wheel">

		<!-- <xacro:cylinder_inertial_with_origin radius="0.162" length="0.07" mass="2">
			<origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
		</xacro:cylinder_inertial_with_origin> -->

		<inertial>
			<mass value="1"/>
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
			<inertia ixx="0.000526666666667" ixy="0" ixz="0" iyy="0.000526666666667" iyz="0" izz="0.001"/>
		</inertial>

		<collision name="right_wheel_collision">
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
			<geometry>
				<cylinder length="0.07" radius="0.162"/>
			</geometry>
		</collision>

		<visual name="right_wheel_visual">
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
			<geometry>
				<cylinder length="0.07" radius="0.162"/>
			</geometry>
			<material name="black"/>
		</visual>
	</link>

	<joint name="right_wheel_joint" type="continuous">
		<origin rpy="0 0 0" xyz="0.0 0.20 0"/>
		<child link="right_wheel"/>
		<parent link="chassis"/>
		<axis rpy="0 0 0" xyz="0 1 0"/>
		<limit effort="10000" velocity="1000"/>
		<joint_properties damping="1.0" friction="1.0"/>
	</joint>


<!--left wheel -->
	<link name="left_wheel">

		<!-- <xacro:cylinder_inertial_with_origin radius="0.162" length="0.07" mass="2">
			<origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
		</xacro:cylinder_inertial_with_origin>
  -->
		<inertial>
			<mass value="1"/>
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
			<inertia ixx="0.000526666666667" ixy="0" ixz="0" iyy="0.000526666666667" iyz="0" izz="0.001"/>
		</inertial>

		<collision name="left_wheel_collision">
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
			<geometry>
				<cylinder length="0.07" radius="0.162"/>
			</geometry>
		</collision>

		<visual name="left_wheel_visual">
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
			<geometry>
				<cylinder length="0.07" radius="0.162"/>
			</geometry>
			<material name="black"/>
		</visual>
	</link>

	<joint name="left_wheel_joint" type="continuous">
		<origin rpy="0 0 0" xyz="0.0 -0.20 0"/>
		<child link="left_wheel"/>
		<parent link="chassis"/>
		<axis rpy="0 0 0" xyz="0 1 0"/>
		<limit effort="10000" velocity="1000"/>
		<joint_properties damping="1.0" friction="1.0"/>
	</joint>


	<!--IMU-->
	<link name="imu">
	    <visual>
	      <origin rpy="0 0 0" xyz="0  0  0"/>
	      <geometry>
	        <box size="0.05 0.05 0.05"/>
	      </geometry>
	      <material name="white"/>
	    </visual>

	    <collision>
	      <origin rpy="0 0 0" xyz="0  0  0"/>
	      <geometry>
	        <box size="0.05 0.05 0.05"/>
	      </geometry>
	      <material name="white"/>
	    </collision>

	    <inertial>
		  <origin xyz="0 0 0.015" rpy="0 0 0"/>
		  <mass value="0.0001"/>
		  <inertia
		    ixx="1.0" ixy="0.0" ixz="0.0"
		    iyy="1.0" iyz="0.0"
		    izz="1.0"/>
		</inertial>
	</link>

	<joint name="imu_joint" type="fixed" >
		<parent link="chassis"/>
		<child link="imu"/>
		<origin xyz="0.0 0 0.1" rpy="0 0 0"/>		
	</joint>

	<gazebo reference="imu">
		<material>Gazebo/Blue</material>
	    <gravity>true</gravity>
	    <sensor name="imu_sensor" type="imu">
	      <always_on>true</always_on>
	      <update_rate>100</update_rate>
	      <visualize>true</visualize>
	      <topic>__default_topic__</topic>
	      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
	        <topicName>/imu</topicName>
	        <bodyName>imu</bodyName>
	        <updateRateHZ>10.0</updateRateHZ>
	        <gaussianNoise>0.0</gaussianNoise>
	        <xyzOffset>0 0 0</xyzOffset>
	        <rpyOffset>0 0 0</rpyOffset>
	        <frameName>imu</frameName>
	      </plugin>
	      <pose>0 0 0 0 0 0</pose>
	    </sensor>
    </gazebo>


	<!--rplidar-->
	<link name="rplidar">
	    <visual>
	      <origin rpy="0 0 0" xyz="0 0 0"/>
	      <geometry>
	        <cylinder length="0.1" radius="0.05"/>
	      </geometry>
	      <material name="green"/>
	    </visual>

	    <collision>
	      <origin rpy="0 0 0" xyz="0  0  0"/>
	      <geometry>
	        <cylinder length="0.1" radius="0.05"/>
	      </geometry>
	      <material name="green"/>
	    </collision>

	    <xacro:cylinder_inertial_with_origin radius="0.05" length="0.1" mass="0.0001">
			<origin xyz="0 0 0" rpy="0 0 0"/>
		</xacro:cylinder_inertial_with_origin>

	    <!-- <inertial>
		  <origin xyz="0 0 0.015" rpy="0 0 0"/>
		  <mass value="1"/>
		  <inertia
		    ixx="1.0" ixy="0.0" ixz="0.0"
		    iyy="1.0" iyz="0.0"
		    izz="1.0"/>
		</inertial> -->
	</link>

	<joint name="rplidar_joint" type="fixed" >
		<parent link="chassis"/>
		<child link="rplidar"/>
		<origin xyz="0.45 0 0.1" rpy="0 0 0"/>		
	</joint>

	<gazebo reference="rplidar">
	    <material>Gazebo/Green</material>
	    <turnGravityOff>false</turnGravityOff>
	    <sensor name="head_hokuyo_sensor" type="ray">
	      <pose>0.025 0 0 0 0 0</pose>
	      <visualize>false</visualize>
	      <update_rate>40</update_rate>
	      <ray>
	        <scan>
	          <horizontal>
	            <samples>720</samples>
	            <resolution>1</resolution>
	            <min_angle>-1.570796</min_angle>
	            <max_angle>1.570796</max_angle>
	          </horizontal>
	        </scan>
	        <range>
	          <min>0.50</min>
	          <max>50.0</max>
	          <resolution>0.001</resolution>
	        </range>
	      </ray>
	      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
	        <topicName>/scan</topicName>
	        <frameName>rplidar</frameName>
	      </plugin>
	    </sensor>
	</gazebo>


	<!--Joint transmissions-->
	<transmission name="tran1">
			<type>transmission_interface/SimpleTransmission</type>
			<joint name ="left_wheel_joint">
				<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
			</joint>
			<actuator name="motor1">
		      <hardwareInterface>EffortJointInterface</hardwareInterface>
		      <mechanicalReduction>1</mechanicalReduction>
		    </actuator>
	</transmission>


	<transmission name="tran2">
			<type>transmission_interface/SimpleTransmission</type>
			<joint name ="right_wheel_joint">
				<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
			</joint>
			<actuator name="motor2">
		      <hardwareInterface>EffortJointInterface</hardwareInterface>
		      <mechanicalReduction>1</mechanicalReduction>
		    </actuator>
	</transmission>


</robot>